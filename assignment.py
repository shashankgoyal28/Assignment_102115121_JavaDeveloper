# -*- coding: utf-8 -*-
"""Assignment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z_B2i9QBtUB3yUYCCaH4zBqUfQvL2Rcv
"""

pip install PyMuPDF pandas openpyxl

import fitz
import pandas as pd
import os

def extract_tables_from_pdf(pdf_path):
    """
    Extracts tables from a PDF file.
    Args:
        pdf_path (str): Path to the PDF file.
    Returns:
        list: List of tables, where each table is a list of rows.
    """
    # Opens the PDF file
    pdf_document = fitz.open(pdf_path)
    tables = []

    # Iterating through each page
    for page_num in range(len(pdf_document)):
        page = pdf_document.load_page(page_num)
        words = page.get_text("words")  # Extract words with their coordinates

        # Grouping the words into lines based on their y-coordinates
        lines = {}
        for word in words:
            x0, y0, x1, y1, word_text, block_no, line_no, word_no = word
            if y0 not in lines:
                lines[y0] = []
            lines[y0].append((x0, word_text))

        # Sorting lines by y-coordinate
        sorted_lines = sorted(lines.items(), key=lambda x: x[0])

        # Converting lines into a table structure
        table = []
        for _, line_words in sorted_lines:
            # Sorting words in the line by x-coordinate
            sorted_words = sorted(line_words, key=lambda x: x[0])
            row = [word[1] for word in sorted_words]
            table.append(row)

        # Adds the table to the list of tables
        if table:
            tables.append(table)

    return tables

def save_tables_to_csv(tables, output_csv_folder):
    """
    Saves extracted tables to CSV files.
    Args: tables (list): List of tables, where each table is a list of rows. output_csv_folder (str): Path to the folder where CSV files will be saved.
    """
    # Createing the output folder if it doesn't exist already
    if not os.path.exists(output_csv_folder):
        os.makedirs(output_csv_folder)

    # Saveing each table as a separate CSV file
    for i, table in enumerate(tables):
        # Converting the table to a pandas DataFrame
        df = pd.DataFrame(table)
        # Saveing the DataFrame to a CSV file
        csv_path = os.path.join(output_csv_folder, f"Table_{i+1}.csv")
        df.to_csv(csv_path, index=False, header=False)
        print(f"Table {i+1} saved to {csv_path}")

def main(pdf_path, output_csv_folder):
    """
    Main function to extract tables from a PDF and save them to CSV files.
    Args:
        pdf_path (str): Path to the input PDF file.
        output_csv_folder (str): Path to save the output CSV files.
    """
    # Extract tables from the PDF
    tables = extract_tables_from_pdf(pdf_path)
    # Save the tables to CSV files
    save_tables_to_csv(tables, output_csv_folder)
    print(f"Tables extracted and saved to {output_csv_folder}")

# Example usage
pdf_path = "test3.pdf"  # PDF file path
output_csv_folder = "output_csv"  # CSV files
main(pdf_path, output_csv_folder)